@model ToLearningCloud.Infra.CrossCutting.Identity.ViewModels.ManageViewModels.ManageLoginsViewModel
@using Microsoft.Owin.Security

@{
    ViewBag.Title = "Gerencie Logins Externos";

    int _status = ViewBag.Status;
}

<h2>@ViewBag.Title</h2>



@if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
{
    if (_status < 0)
    {
        <div class="alert alert-danger alert-dismissible fade in" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Fechar">
                <span aria-hidden="true">×</span>
            </button>
            <h5><strong>@ViewBag.StatusMessage</strong></h5>
            <ul>
                @if (Model.Callback != null)
                {
                    foreach (var error in Model.Callback)
                    {
                        <li>@error</li>
                    }
                }
            </ul>
        </div>

    }
    else if (_status > 0)
    {
        <div class="alert alert-warning alert-dismissible fade in" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Fechar">
                <span aria-hidden="true">×</span>
            </button>
            <h5><strong>@ViewBag.StatusMessage</strong></h5>
        </div>
    }
    else
    {
        <div class="alert alert-success alert-dismissible fade in" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Fechar">
                <span aria-hidden="true">×</span>
            </button>
            <h5><strong>@ViewBag.StatusMessage</strong></h5>
        </div>
    }
}

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                O serviço de logins com contas externas está desetivado. Entre em contato com o administrador do sistema.
            </p>
        </div>
    }
    else
    {
        if (Model.CurrentLogins.Count > 0)
        {
            <h4>Logins Registrados</h4>
            <table class="table">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-default" value="Remover" title="Remover o login @account.LoginProvider de sua conta LearningCloud" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    <i style="color: #ffd800;text-shadow: 1px 1px 5px #292929; font-size: 1.2em;" class="fa fa-exclamation-triangle">&nbsp;&nbsp;</i><span class="text-warning">Este Login não pode ser removido</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        if (Model.OtherLogins.Count > 0)
        {
            <h4>Outros provedores de logins disponíveis</h4>
            <hr />
            using (Html.BeginForm("LinkLogin", "Manage"))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    <p>
                        @foreach (AuthenticationDescription p in Model.OtherLogins)
                        {
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Entrar usando sua conta @p.Caption">@p.AuthenticationType</button>
                        }
                    </p>
                </div>
            }
        }
    }
}


